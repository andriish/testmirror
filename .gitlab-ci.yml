variables:
  DOCKER_DRIVER: overlay2
stages:
  - software
  - powheg
  - proc
  - release
  - eos

.lcg-alma9:
# We need images where one can install glibc-static man-db 
  image: gitlab-registry.cern.ch/sft/docker/alma9-core:${IMAGE}
  tags:
    - k8s-${K8TAG}
  stage: software
  rules:
    - changes:
        - External_scripts/Install_chaplin.sh
        - External_scripts/Install_cln_ginac.sh
        - External_scripts/Install_NLOX.sh
        - External_scripts/Install_OpenLoops.sh
        - External_scripts/Install_OpenLoops_1.3.1.sh
        - External_scripts/Install_recola_collier.sh
        - External_scripts/Install_zlib.sh
        - External_scripts/Install_python2.sh
  script:
    - dnf -y install epel-release dnf*
    - dnf -y config-manager --set-enabled crb
    - dnf -y install wget tar make  make autoconf bzip2 mc file which
    - dnf -y install libquadmath-devel || echo "NOT AVAILABLE"
    - dnf -y install glibc-static man-db  subversion git readline-devel readline-devel  openssl-devel bzip2-devel libffi-devel sqlite-devel
    - export
    - uname -a
    - TOP=$(pwd)
    - cd $TOP
    - pwd
    - ls
    - ls /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    - mkdir -p External
    - ls -lah External
    - ./Compile.sh
  cache:
    untracked: true
    key: External-$CI_COMMIT_REF_NAME-${CTAG}
    paths:
      - ./External
  artifacts:
    untracked: true
    paths:
      - ./External

.installscript:
#  image: gitlab-registry.cern.ch/sft/docker/alma9:latest
# We need images where one can install glibc-static man-db 
  image: gitlab-registry.cern.ch/sft/docker/alma9-core:${IMAGE}
  tags:
    - k8s-${K8TAG}
  stage: powheg
  rules:
    - changes:
       - Install.sh
       - ./Custom
  script:
    - dnf -y install epel-release dnf*
    - dnf -y config-manager --set-enabled crb
    - dnf -y install wget tar make  make autoconf bzip2 mc file which
    - dnf -y install libquadmath-devel || echo "NOT AVAILABLE"
    - dnf -y install glibc-static man-db  subversion git readline-devel readline-devel  openssl-devel bzip2-devel libffi-devel sqlite-devel
    - export
    - uname -a
    - TOP=$(pwd)
    - ls -lah 
    - if [ ! -d POWHEG-BOX-V2 ]; then ./Install.sh; fi
    - N=$(ls -1 POWHEG-*/powheginput.f powheg-*/powheginput.f | wc -l) 
    - echo $N
    - if [ $N != "4" ]; then ./Install.sh; fi
#    - ./Install.sh 
  cache:
    - key: POWHEG-$CI_COMMIT_REF_NAME-${CTAG}
      paths:
        - ./POWHEG-BOX-RES
        - ./POWHEG-BOX-V2
        - ./POWHEG-BOX
        - ./powheg-box-res-bb4l-sl-beta
      untracked: true
    - key: External-$CI_COMMIT_REF_NAME-${CTAG}
      paths:
        - ./External      
      policy: pull
      untracked: true
  artifacts:
    untracked: true
    paths:
      - ./POWHEG-BOX-RES
      - ./POWHEG-BOX-V2
      - ./POWHEG-BOX
      - ./powheg-box-res-bb4l-sl-beta

.process:
#  image: gitlab-registry.cern.ch/sft/docker/alma9:latest
# We need images where one can install glibc-static man-db 
  image: gitlab-registry.cern.ch/sft/docker/alma9-core:${IMAGE}
  tags:
    - k8s-${K8TAG}
  stage: proc
  rules:
    - changes:
        - Make.sh
        - ./Custom
        - ./ATLASOTF-00-04-00
        - ./AuxFiles
  before_script:
    - dnf -y install epel-release dnf*
    - dnf -y config-manager --set-enabled crb
    - dnf -y install wget tar make  make autoconf bzip2 mc file which
    - dnf -y install libquadmath-devel || echo "NOT AVAILABLE"
    - dnf -y install glibc-static man-db  subversion git readline-devel readline-devel  openssl-devel bzip2-devel libffi-devel sqlite-devel
  script:
    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/usr/lib64
    - ls -lah
    - mkdir -p TEMP
    - cd TEMP
    - csplit -sk  ../Make.sh  '/cd $CWD/' {*}
    - fn=$(grep -Rnw ./ -e "$PWH/$NAME$" |cut -f 1 -d:)
    - cat xx00 $fn > ../script.sh
    - cd ..
    - chmod +x script.sh
    - cat -n script.sh 
    - ./script.sh &> $PWH/$NAME/compile.log || ( cat $PWH/$NAME/compile.log && exit 1;) 
  artifacts:
    paths:
      - $PWH/$NAME
  parallel:
    matrix:
      - NAME: [W,Z]
        PWH: [POWHEG-BOX]
      - NAME: [Wj,Zj,WW,WZ,ZZ,dijet,trijet,HJ,HJJ,hvq,DMV,DMGG,vbf_wp_wp,ttH,VBF_H,gg_H_quark-mass-effects,Z2jet]
        PWH: [POWHEG-BOX-V2]
      - NAME: [W2jet,W_ew-BMNNP,Z_ew-BMNNPV,ST_sch,ST_tch_4f,ttb_NLO_dec,Wgamma,bbH,VBF_Wp_Wm]
        PWH: [POWHEG-BOX-V2]
      - NAME: [VBF_W-Z,W_smeft,Z_smeft,directphoton,ttbarj,VBF_Z_Z,h_bbg,fourtops,ttZ,ttll,DY_SLQ_NLO]
        PWH: [POWHEG-BOX-V2]
      - NAME: [WWJ,HWJ,HZJ,Wbb_dec,Wbbj,ggHZ]
        PWH: [POWHEG-BOX-V2]
      - NAME: [b_bbar_4l]
        PWH: [POWHEG-BOX-RES]
      - NAME: [b_bbar_4l,b_bbar_4l_modified]
        PWH: [powheg-box-res-bb4l-sl-beta]
      - NAME: [b_bbar_4l_modified]
        PWH: [POWHEG-BOX-RES]
      - NAME: [HZJ_ew,ttbb]
        PWH: [POWHEG-BOX-RES]      
      - NAME: [LQ-s-chan]
        PWH: [POWHEG-BOX-RES]
      - NAME: [DMS_tloop,DMV,DY_VLQ_NLO,Wp_Wp_J_J,weakinos]
        PWH: [POWHEG-BOX-V2]
      - NAME: [vbs-ssww-nloew]
        PWH: [POWHEG-BOX-RES]
      - NAME: [STJ]
        PWH: [POWHEG-BOX-V2]
      - NAME: [ST_wtch_DR_modified,ST_wtch_DR,ST_wtch_DS]
        PWH: [POWHEG-BOX-V2]
      - NAME: [ggHH,ggHH_SMEFT]
        PWH: [POWHEG-BOX-V2]
      - NAME: [ttJ_MiNNLO]
        PWH: [POWHEG-BOX-V2]
      - NAME: [HWJ_ew]
        PWH: [POWHEG-BOX-RES]
      - NAME: [Wj/WjMiNNLO,Wtt_dec/pp_ttWm_QCD,Wtt_dec/pp_ttWm_EW,Wtt_dec/pp_ttWp_QCD,Wtt_dec/pp_ttWp_EW]
        PWH: [POWHEG-BOX-V2]
      - NAME: [Zj/ZjMiNNLO]
        PWH: [POWHEG-BOX-V2]
      - NAME: [HJ/HJMiNNLO]
        PWH: [POWHEG-BOX-V2]
#      - NAME: [gg4l]
#        PWH: [POWHEG-BOX-RES]
  cache:
    - key: POWHEG-$CI_COMMIT_REF_NAME-$CTAG
      paths:
        - ./POWHEG-BOX-RES
        - ./POWHEG-BOX-V2
        - ./POWHEG-BOX
        - ./powheg-box-res-bb4l-sl-beta
      policy: pull  
      untracked: true
    - key: External-$CI_COMMIT_REF_NAME-${CTAG}
      paths:
        - ./External      
      policy: pull
      untracked: true
       



.release:
  stage: release
  when: manual
  script:
    - echo "Create release"
  artifacts:
    untracked: true
    paths:
      - ./
  cache:
    - key: POWHEG-$CI_COMMIT_REF_NAME-${CTAG}
      paths:
        - ./POWHEG-BOX-RES
        - ./POWHEG-BOX-V2
        - ./POWHEG-BOX
        - ./powheg-box-res-bb4l-sl-beta
      policy: pull  
      untracked: true
    - key: External-$CI_COMMIT_REF_NAME-${CTAG}
      paths:
        - ./External      
      policy: pull
      untracked: true


.eos:
  image: gitlab-registry.cern.ch/sft/docker/alma9-core:${IMAGE}
  stage: eos
  when: manual
  before_script:
      - dnf -y install curl
  script:
    - echo "Create release tarball"
    - tar -czf ${CI_COMMIT_REF_NAME}-${CTAG}.tar.gz POWHEG* powheg* External* ATLASOTF-00-04-00 *sh AuxFiles Custom
    - echo "Upload release tarball" 
    - curl -T ${CI_COMMIT_REF_NAME}.tar.gz -X PUT https://cernbox.cern.ch/remote.php/dav/public-files/${POWHEGEOSDIR}/${CI_COMMIT_REF_NAME}-${CTAG}.tar.gz

lcg-alma9-x86_64:
  variables:
    IMAGE: latest
    K8TAG: cvmfs
    CTAG: x86_64
  extends: .lcg-alma9

lcg-alma9-arm:
  variables:
    IMAGE: aarch64
    K8TAG: arm
    CTAG: arm
  extends: .lcg-alma9

installscript-arm:
  variables:
    IMAGE: aarch64
    K8TAG: arm
    CTAG: arm
  dependencies:
    - lcg-alma9-arm
  extends: .installscript

installscript-x86_64:
  variables:
    IMAGE: latest
    K8TAG: cvmfs
    CTAG: x86_64
  dependencies:
    - lcg-alma9-x86_64    
  extends: .installscript

process-arm:
  variables:
    IMAGE: aarch64
    K8TAG: arm
    CTAG: arm
  dependencies:
    - lcg-alma9-arm
    - installscript-arm     
  extends: .process

process-x86_64:
  variables:
    IMAGE: latest
    K8TAG: cvmfs
    CTAG: x86_64
  dependencies:
    - lcg-alma9-x86_64
    - installscript-x86_64   
  extends: .process

release-arm:
  variables:
    IMAGE: aarch64
    K8TAG: arm
    CTAG: arm
  dependencies:
    - process-arm   
  extends: .release

release-x86_64:
  variables:
    IMAGE: latest
    K8TAG: cvmfs
    CTAG: x86_64
  dependencies:
    - process-x86_64   
  extends: .release

eos-arm:
  variables:
    IMAGE: aarch64
    K8TAG: arm
    CTAG: arm
  dependencies: 
    - release-arm    
  extends: .eos

eos-x86_64:
  variables:
    IMAGE: latest
    K8TAG: cvmfs
    CTAG: x86_64
  dependencies: 
    - release-x86_64
  extends: .eos
